#!/usr/bin/env bash

set -e
set -o pipefail
# set -x

ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE:-version}
[ -n "$ASDF_INSTALL_VERSION" ] || (>&2 echo 'Missing ASDF_INSTALL_VERSION' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (>&2 echo 'Missing ASDF_INSTALL_PATH' && exit 1)

install_plugin() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local download_url="$(get_download_url $install_type $version)"

  echo "Downloading kubebuilder from $download_url"

  # releases from 3.0.0 onwards are a self-contained executable
  if [ "$(printf '%s\n' "3.0.0" "$version" | sort -rV | head -n1)" = "$version" ]; then
    local bin_install_path="$install_path/bin"
    local bin_path="${bin_install_path}/kubebuilder"

    mkdir -p "${bin_install_path}"
    curl -s -L "$download_url" -o "$bin_path"
    chmod +x $bin_path

  else
    # releases prior to 3.0.0 are tar.gz file containing several executables
    local tmp_download_file=$(mktemp)

    curl -L -s "$download_url" -o "$tmp_download_file"
    pushd $install_path > /dev/null
    tar zxf "$tmp_download_file" --strip-components 1 || exit 1
    popd > /dev/null
  fi
}

get_platform() {
  [ "Linux" = "$(uname)" ] && echo "linux" || echo "darwin"
}

get_arch() {
  local arch=$(uname -m)
  case $arch in
    amd64 | x86_64)
      echo "amd64"
      ;;
    arm64)
      echo "arm64"
      ;;
    ppc64le)
      echo "ppc64le"
      ;;
    *)
      echo ""
  esac
}

get_download_url() {
  local install_type=$1
  local tag=$2
  local version=$2

  local platform=$(get_platform)
  local arch=$(get_arch)

  # HACK: asdf wants numeric version numbers, but most start with a "v"
  # since people usually tag releases in GitHub with a vX.X.X and _not_ X.X.X
  # so need to prefix version based on this fragile logic :-/
  # in case the version is in some other format such as FOOBAR.X.X.X
  if [[ "$tag" =~ ^[0-9] ]]; then
    tag="v${tag}"
  fi

  # releases from 3.0.0 do not have version in the download filename
  if [ "$(printf '%s\n' "3.0.0" "$version" | sort -rV | head -n1)" = "$version" ]; then
    echo "https://github.com/kubernetes-sigs/kubebuilder/releases/download/${tag}/kubebuilder_${platform}_${arch}"
  else
    echo "https://github.com/kubernetes-sigs/kubebuilder/releases/download/${tag}/kubebuilder_${version}_${platform}_${arch}.tar.gz"
  fi
}

install_plugin "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
